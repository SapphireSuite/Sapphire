# Copyright 2020 Sapphire development team. All Rights Reserved.

# Reference: https://docs.travis-ci.com/
# Build status: https://travis-ci.org/github/sapphire-devteam/Sapphire

# Language.
language: cpp



# Distribution.
dist: bionic



# OS matrix.
os:
  - linux
# - windows
# - osx



# Architecture matrix.
arch:
  - amd64
# - arm64



# Dependencies
addons:

  # Linux
  apt:
    update: true
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - g++-8
      - clang-8
      - gcc-9
      - g++-9
      - clang-9
      - gcc-10
      - g++-10
      - clang-10
      - ninja-build
      - libvulkan-dev

# Not supported yet.
#  # Windows
#  chocolatey:
#    update: true
#    packages:
#      - cmake
#      - llvm
#      - ninja
#      - vulkan-sdk

  # OSX
  homebrew:
    update: true
    packages:
      - cmake
      - gcc
      - llvm
      - ninja
      - vulkan-headers



# Pre-install commands.
before_install:

  # All the dependencies are installed in ${HOME}/deps/
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}



# Install commands.
install:

  # Install Cmake 3.17.0
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

  # Add Windows dependencies.
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      choco install -y cmake
      choco install -y gcc
      choco install -y llvm
      choco install -y ninja
      choco install -y vulkan-sdk
      powershell refreshenv
    fi

  # Engine path environment variable.
  - export PATH="$HOME/Sapphire-DevTeam/Sapphire:$PATH"



# Post install.
before_script:

  # Log versions.
  - cmake --version
  - ${CC} --version
  - ${CXX} --version
  - echo ${GEN}

  # Go back to the root of the project
  - cd "${TRAVIS_BUILD_DIR}"



# Executed commands.
script:

  # Debug: generate, build and test.
  - echo === Debug ===
  - bash Tools/Generators/${GEN}.sh Debug -b -t -travis

  # Release: generate, build and test.
  - echo === Release ===
  - bash Tools/Generators/${GEN}.sh Release -b -t -travis



# Job specialization matrix.
jobs:
  include:

    # Linux GCC 8
    - name: "GCC 8"
      os: linux
      env: CC=gcc-8 CXX=g++-8 GEN=Ninja

    # Linux GCC 9
    - name: "GCC 9"
      os: linux
      env: CC=gcc-9 CXX=g++-9 GEN=Ninja

    # Linux GCC 10
    - name: "GCC 10"
      os: linux
      env: CC=gcc-10 CXX=g++-10 GEN=Ninja


    # Linux CLANG 8
    - name: "CLANG 8"
      os: linux
      env: CC=clang-8 CXX=clang++-8 GEN=Ninja

    # Linux CLANG 9
    - name: "CLANG 9"
      os: linux
      env: CC=clang-9 CXX=clang++-9 GEN=Ninja

    # Linux CLANG 8
    - name: "CLANG 10"
      os: linux
      env: CC=clang-10 CXX=clang++-10 GEN=Ninja


    # Windows Ninja
    - name: "Windows Ninja"
      os: windows
      env: CC=clang CXX=clang++ GEN=Ninja

    # Windows Visual 2017
    - name: "Windows Visual 2017"
      os: windows
      env: CC=clang CXX=clang++ GEN=VS_2017

# Not supported yet.
#    # Windows Visual 2019
#    - name: "Windows Visual 2019"
#      os: windows
#      env: CC=clang CXX=clang++ GEN=VS_2019


    # OSX GCC.
    - name: "OSX GCC"
      os: osx
      env: CC=gcc CXX=g++ GEN=Ninja

    # OSX CLANG.
    - name: "OSX CLANG"
      os: osx
      env: CC=clang CXX=clang++ GEN=Ninja


    # Doxygen Generation.
    - name: "Doxygen"
      addons: { apt: { packages: ["doxygen"] } }
      before_install: skip
      install: skip
      before_script: doxygen --version
      script: doxygen Engine/Doc/doxygen.config

      # Generate and deploy documentation
      deploy:
        strategy: git
        provider: pages
        skip_cleanup: true
        local_dir: Engine/Doc/html
        token: $GH_REPO_TOKEN
        on:
          branch: master # Only deploy on gh-pages from master.



# Travis' watched branches.
branches:

  # Blacklist.
  except:
    - /^(?i:old).*$/
    - /^(?i:WIP)_.*$/
    - /^(?i:temp).*$/
    - /^(?i:test).*$/

  # Whitelist.
  only:
    - master
    - /^dev_.*$/
    - /^rework.*$/
